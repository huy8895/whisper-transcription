name: Generate PNG slides using Puppeteer

on:
  workflow_dispatch:

jobs:
  build-images:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 🛠️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: 📦 Install dependencies
        run: |
          npm install puppeteer fs-extra

      - name: 📜 Generate PNG slides using Puppeteer
        run: |
          mkdir -p slides_html slides_img
          cat << 'EOF' > gen_slides.js
          const puppeteer = require("puppeteer");
          const fs = require("fs-extra");

          const data = JSON.parse(fs.readFileSync("slides.json", "utf8"));
          const htmlTemplate = (text) => \`
          <html>
          <head>
            <style>
              @import url('https://fonts.googleapis.com/css2?family=Crimson+Pro&display=swap');
              body {
                width: 1920px;
                height: 1080px;
                margin: 0;
                padding: 100px;
                background-image: url("file://\${process.cwd()}/assets/bg.jpg");
                background-size: cover;
                font-family: 'Crimson Pro', serif;
                color: #404040;
                font-size: 38px;
                text-align: justify;
                display: flex;
                align-items: flex-start;
                justify-content: center;
              }
              .text { width: 80%; }
            </style>
          </head>
          <body><div class="text">\${text}</div></body>
          </html>\`;

          (async () => {
            const browser = await puppeteer.launch();
            const page = await browser.newPage();
            await page.setViewport({ width: 1920, height: 1080 });

            for (let i = 0; i < data.length; i++) {
              const html = htmlTemplate(data[i].text);
              const file = \`slides_html/slide_\${i + 1}.html\`;
              fs.writeFileSync(file, html);
              await page.setContent(html, { waitUntil: "domcontentloaded" });
              await page.screenshot({ path: \`slides_img/slide_\${i + 1}.png\` });
              console.log(\`✅ Slide \${i + 1} captured\`);
            }

            await browser.close();
          })();
          EOF

          node gen_slides.js

      - name: 🗜️ Zip all PNGs
        run: zip -r slides_puppeteer.zip slides_img

      - name: 📤 Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: slides_puppeteer
          path: slides_puppeteer.zip
